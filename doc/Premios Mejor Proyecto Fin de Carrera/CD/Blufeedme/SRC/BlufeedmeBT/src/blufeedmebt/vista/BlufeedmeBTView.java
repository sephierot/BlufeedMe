/*
 *
 * Copyright 2010 David Armenteros Escabias, Ángel Daniel Sanjuán Espejo.
 *
 * This file is part of BluFeedMe.
 *
 * BluFeedMe is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package blufeedmebt.vista;

import blufeedme.modelo.Categoria;
import blufeedme.modelo.Dispositivo;
import blufeedme.modelo.Noticia;
import blufeedmebt.DispositivoBT;
import blufeedmebt.eventos.EventoDispositivo;
import blufeedmebt.eventos.ListenerDispositivo;
import com.intel.bluetooth.BlueCoveImpl;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import javax.bluetooth.BluetoothStateException;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import java.util.ListIterator;
import java.util.Vector;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.bluetooth.UUID;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;

/**
 * @author David Armenteros Escabias, Ángel Daniel Sanjuán Espejo
 * davidarmesc@gmail.com, angdanni@gmail.com
 * http://blufeedme.wordpress.com/
 */
public class BlufeedmeBTView extends FrameView {

    private BlufeedmeBT blufeedmeBT = null;
    private DispositivoBT dispositivoBT = null;
    private File fichero_prop_bluecove;
    private File fichero_bd_prop;
    private File fichero_html;
    //Modelos de las listas
    private DefaultListModel modeloListaCategorias = new DefaultListModel();
    private DefaultListModel modeloListaDispositivos = new DefaultListModel();
    private DefaultListModel modeloListaProxNoticias = new DefaultListModel();
    private DefaultListModel modeloListaLog = new DefaultListModel();
    //Renderer de las filas de la lista de dispositivos
    private RendererListaDispositivos rendererFilasDispositivos = new RendererListaDispositivos();
    //Renderer de las filas de la lista de log
    private RendererListaLog rendererFilasLog = new RendererListaLog();
    //Manejador para añadir filas al log
    private ListStreamHandler handlerListaLog;
    //Establece si se debe limpiar todo el formulario (cuando ocurre una nueva busqueda)
    private boolean limpiarTodo = false;
    //Obtenemos el log general de la aplicacion
    public static final Logger LOGGER = Logger.getLogger("blufeedmebt");

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        RSinLog = new javax.swing.JRadioButton();
        RSevere = new javax.swing.JRadioButton();
        RWarning = new javax.swing.JRadioButton();
        RInfo = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ListaLog = new javax.swing.JList();
        nMaxLineasLog = new javax.swing.JSlider();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaDispositivos = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        PanelInfoDispositivo = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NombreDispositivo = new javax.swing.JTextField();
        URLServicio = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaCategorias = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListaProxNoticias = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        PinPairing = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jFileChooser1 = new javax.swing.JFileChooser();
        jDialogconfiguracion = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jBAceptar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLBD = new javax.swing.JLabel();
        jLBT = new javax.swing.JLabel();
        jLHTML = new javax.swing.JLabel();
        jTBD = new javax.swing.JTextField();
        jTBT = new javax.swing.JTextField();
        jTHTML = new javax.swing.JTextField();
        jBExaminarBD = new javax.swing.JButton();
        jBExaminarHTML = new javax.swing.JButton();
        jBExaminarBT = new javax.swing.JButton();

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(1024, 768));

        jSplitPane1.setDividerLocation(360);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(blufeedmebt.vista.BlufeedmeBT.class).getContext().getResourceMap(BlufeedmeBTView.class);
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel4.border.title"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        buttonGroup1.add(RSinLog);
        RSinLog.setText(resourceMap.getString("RSinLog.text")); // NOI18N
        RSinLog.setToolTipText(resourceMap.getString("RSinLog.toolTipText")); // NOI18N
        RSinLog.setName("RSinLog"); // NOI18N
        RSinLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RButtonsActionPerformed(evt);
            }
        });

        buttonGroup1.add(RSevere);
        RSevere.setText(resourceMap.getString("RSevere.text")); // NOI18N
        RSevere.setToolTipText(resourceMap.getString("RSevere.toolTipText")); // NOI18N
        RSevere.setName("RSevere"); // NOI18N
        RSevere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RButtonsActionPerformed(evt);
            }
        });

        buttonGroup1.add(RWarning);
        RWarning.setText(resourceMap.getString("RWarning.text")); // NOI18N
        RWarning.setToolTipText(resourceMap.getString("RWarning.toolTipText")); // NOI18N
        RWarning.setName("RWarning"); // NOI18N
        RWarning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RButtonsActionPerformed(evt);
            }
        });

        buttonGroup1.add(RInfo);
        RInfo.setSelected(true);
        RInfo.setText(resourceMap.getString("RInfo.text")); // NOI18N
        RInfo.setName("RInfo"); // NOI18N
        RInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RButtonsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RSinLog)
                    .addComponent(RWarning)
                    .addComponent(RInfo)
                    .addComponent(RSevere))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(RSinLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RSevere, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RWarning)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RInfo))
        );

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jScrollPane5.border.title"))); // NOI18N
        jScrollPane5.setAutoscrolls(true);
        jScrollPane5.setName("jScrollPane5"); // NOI18N

        ListaLog.setFont(resourceMap.getFont("ListaLog.font")); // NOI18N
        ListaLog.setModel(this.modeloListaLog);
        ListaLog.setToolTipText(resourceMap.getString("ListaLog.toolTipText")); // NOI18N
        ListaLog.setCellRenderer(this.rendererFilasLog);
        ListaLog.setName("ListaLog"); // NOI18N
        jScrollPane5.setViewportView(ListaLog);

        nMaxLineasLog.setMajorTickSpacing(50);
        nMaxLineasLog.setMaximum(400);
        nMaxLineasLog.setMinimum(50);
        nMaxLineasLog.setMinorTickSpacing(1);
        nMaxLineasLog.setOrientation(javax.swing.JSlider.VERTICAL);
        nMaxLineasLog.setPaintLabels(true);
        nMaxLineasLog.setPaintTicks(true);
        nMaxLineasLog.setToolTipText(resourceMap.getString("nMaxLineasLog.toolTipText")); // NOI18N
        nMaxLineasLog.setValue(100);
        nMaxLineasLog.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("nMaxLineasLog.border.title"))); // NOI18N
        nMaxLineasLog.setName("nMaxLineasLog"); // NOI18N
        nMaxLineasLog.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                nMaxLineasLogStateChanged(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel5.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel5.border.titleFont"))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        jLabel11.setBackground(resourceMap.getColor("jLabel11.background")); // NOI18N
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel11.setName("jLabel11"); // NOI18N
        jLabel11.setOpaque(true);

        jLabel12.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setBackground(resourceMap.getColor("jLabel13.background")); // NOI18N
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel13.setName("jLabel13"); // NOI18N
        jLabel13.setOpaque(true);

        jLabel14.setFont(resourceMap.getFont("jLabel14.font")); // NOI18N
        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel16.setFont(resourceMap.getFont("jLabel16.font")); // NOI18N
        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        jLabel15.setBackground(resourceMap.getColor("jLabel15.background")); // NOI18N
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel15.setName("jLabel15"); // NOI18N
        jLabel15.setOpaque(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(43, 43, 43)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addGap(48, 48, 48)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 13, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 13, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 13, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel19.setFont(resourceMap.getFont("jLabel19.font")); // NOI18N
        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setEnabled(false);
        jLabel19.setName("jLabel19"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                        .addComponent(jLabel19))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nMaxLineasLog, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nMaxLineasLog, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel2);

        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        ListaDispositivos.setFont(resourceMap.getFont("ListaDispositivos.font")); // NOI18N
        ListaDispositivos.setModel(this.modeloListaDispositivos);
        ListaDispositivos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListaDispositivos.setToolTipText(resourceMap.getString("ListaDispositivos.toolTipText")); // NOI18N
        ListaDispositivos.setCellRenderer(this.rendererFilasDispositivos);
        ListaDispositivos.setName("ListaDispositivos"); // NOI18N
        ListaDispositivos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaDispositivosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ListaDispositivos);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        PanelInfoDispositivo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("PanelInfoDispositivo.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("PanelInfoDispositivo.border.titleFont"))); // NOI18N
        PanelInfoDispositivo.setName("PanelInfoDispositivo"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        NombreDispositivo.setEditable(false);
        NombreDispositivo.setText(resourceMap.getString("NombreDispositivo.text")); // NOI18N
        NombreDispositivo.setName("NombreDispositivo"); // NOI18N

        URLServicio.setEditable(false);
        URLServicio.setText(resourceMap.getString("URLServicio.text")); // NOI18N
        URLServicio.setToolTipText(resourceMap.getString("URLServicio.toolTipText")); // NOI18N
        URLServicio.setName("URLServicio"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        ListaCategorias.setModel(this.modeloListaCategorias);
        ListaCategorias.setToolTipText(resourceMap.getString("ListaCategorias.toolTipText")); // NOI18N
        ListaCategorias.setName("ListaCategorias"); // NOI18N
        jScrollPane3.setViewportView(ListaCategorias);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        ListaProxNoticias.setModel(this.modeloListaProxNoticias);
        ListaProxNoticias.setToolTipText(resourceMap.getString("ListaProxNoticias.toolTipText")); // NOI18N
        ListaProxNoticias.setName("ListaProxNoticias"); // NOI18N
        jScrollPane4.setViewportView(ListaProxNoticias);
        ListaProxNoticias.getAccessibleContext().setAccessibleDescription(resourceMap.getString("ListaProxNoticias.AccessibleContext.accessibleDescription")); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        PinPairing.setEditable(false);
        PinPairing.setText(resourceMap.getString("PinPairing.text")); // NOI18N
        PinPairing.setToolTipText(resourceMap.getString("PinPairing.toolTipText")); // NOI18N
        PinPairing.setName("PinPairing"); // NOI18N

        javax.swing.GroupLayout PanelInfoDispositivoLayout = new javax.swing.GroupLayout(PanelInfoDispositivo);
        PanelInfoDispositivo.setLayout(PanelInfoDispositivoLayout);
        PanelInfoDispositivoLayout.setHorizontalGroup(
            PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInfoDispositivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelInfoDispositivoLayout.createSequentialGroup()
                        .addGroup(PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanelInfoDispositivoLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NombreDispositivo, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(PanelInfoDispositivoLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PinPairing, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)))
                    .addGroup(PanelInfoDispositivoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(URLServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PanelInfoDispositivoLayout.setVerticalGroup(
            PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelInfoDispositivoLayout.createSequentialGroup()
                .addGroup(PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(URLServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NombreDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(PinPairing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInfoDispositivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel3.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel3.border.titleFont"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jLabel7.setBackground(resourceMap.getColor("jLabel7.background")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setOpaque(true);

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setBackground(resourceMap.getColor("jLabel9.background")); // NOI18N
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel9.setName("jLabel9"); // NOI18N
        jLabel9.setOpaque(true);

        jLabel10.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel17.setBackground(resourceMap.getColor("jLabel17.background")); // NOI18N
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel17.setName("jLabel17"); // NOI18N
        jLabel17.setOpaque(true);

        jLabel18.setFont(resourceMap.getFont("jLabel18.font")); // NOI18N
        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelInfoDispositivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelInfoDispositivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jSplitPane1.setTopComponent(jPanel1);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setActionCommand(resourceMap.getString("menuArchivo.actionCommand")); // NOI18N
        fileMenu.setLabel(resourceMap.getString("menuArchivo.label")); // NOI18N
        fileMenu.setName("menuArchivo"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(blufeedmebt.vista.BlufeedmeBT.class).getContext().getActionMap(BlufeedmeBTView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setToolTipText(resourceMap.getString("exitMenuItem.toolTipText")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setToolTipText(resourceMap.getString("aboutMenuItem.toolTipText")); // NOI18N
        aboutMenuItem.setActionCommand(resourceMap.getString("aboutMenuItem.actionCommand")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        jFileChooser1.setCurrentDirectory(null);
        jFileChooser1.setName("jFileChooser1"); // NOI18N

        jDialogconfiguracion.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialogconfiguracion.setTitle(resourceMap.getString("jDialogConfiguracion.title")); // NOI18N
        jDialogconfiguracion.setMinimumSize(new java.awt.Dimension(650, 260));
        jDialogconfiguracion.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        jDialogconfiguracion.setName("jDialogConfiguracion"); // NOI18N
        jDialogconfiguracion.setResizable(false);
        jDialogconfiguracion.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jDialogconfiguracionWindowClosed(evt);
            }
        });

        jPanel7.setName("jPanel7"); // NOI18N

        jBAceptar.setFont(resourceMap.getFont("jBAceptar.font")); // NOI18N
        jBAceptar.setText(resourceMap.getString("jBAceptar.text")); // NOI18N
        jBAceptar.setName("jBAceptar"); // NOI18N
        jBAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jBAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(271, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel6.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel6.border.titleFont"))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N

        jLBD.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLBD.setText(resourceMap.getString("jLBD.text")); // NOI18N
        jLBD.setName("jLBD"); // NOI18N

        jLBT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLBT.setText(resourceMap.getString("jLBT.text")); // NOI18N
        jLBT.setName("jLBT"); // NOI18N

        jLHTML.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLHTML.setText(resourceMap.getString("jLHTML.text")); // NOI18N
        jLHTML.setName("jLHTML"); // NOI18N

        jTBD.setEditable(false);
        jTBD.setText(resourceMap.getString("jTBD.text")); // NOI18N
        jTBD.setName("jTBD"); // NOI18N

        jTBT.setEditable(false);
        jTBT.setText(resourceMap.getString("jTBT.text")); // NOI18N
        jTBT.setName("jTBT"); // NOI18N

        jTHTML.setEditable(false);
        jTHTML.setText(resourceMap.getString("jTHTML.text")); // NOI18N
        jTHTML.setName("jTHTML"); // NOI18N

        jBExaminarBD.setText(resourceMap.getString("jBExaminarBD.text")); // NOI18N
        jBExaminarBD.setName("jBExaminarBD"); // NOI18N
        jBExaminarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExaminarBDActionPerformed(evt);
            }
        });

        jBExaminarHTML.setText(resourceMap.getString("jBExaminarHTML.text")); // NOI18N
        jBExaminarHTML.setName("jBExaminarHTML"); // NOI18N
        jBExaminarHTML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExaminarHTMLActionPerformed(evt);
            }
        });

        jBExaminarBT.setText(resourceMap.getString("jBExaminarBT.text")); // NOI18N
        jBExaminarBT.setName("jBExaminarBT"); // NOI18N
        jBExaminarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExaminarBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLBD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLHTML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTBD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                    .addComponent(jTBT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                    .addComponent(jTHTML, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jBExaminarBD)
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jBExaminarBT)
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jBExaminarHTML)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLBD)
                    .addComponent(jBExaminarBD))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTBT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLBT)
                    .addComponent(jBExaminarBT))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTHTML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLHTML)
                    .addComponent(jBExaminarHTML))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogconfiguracionLayout = new javax.swing.GroupLayout(jDialogconfiguracion.getContentPane());
        jDialogconfiguracion.getContentPane().setLayout(jDialogconfiguracionLayout);
        jDialogconfiguracionLayout.setHorizontalGroup(
            jDialogconfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogconfiguracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogconfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialogconfiguracionLayout.setVerticalGroup(
            jDialogconfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogconfiguracionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void ListaDispositivosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaDispositivosValueChanged
        this.MuestraInfoDispositivo(this.ListaDispositivos.getSelectedIndex());
    }//GEN-LAST:event_ListaDispositivosValueChanged

    private void nMaxLineasLogStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_nMaxLineasLogStateChanged
        //Establecemos el nuevo limite de lineas
        this.handlerListaLog.setN_lineasMax(this.nMaxLineasLog.getValue());
    }//GEN-LAST:event_nMaxLineasLogStateChanged

    private void RButtonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RButtonsActionPerformed
        if (this.RInfo.isSelected()) {
            this.handlerListaLog.setLevel(Level.ALL);
            return;
        }

        if (this.RSevere.isSelected()) {
            this.handlerListaLog.setLevel(Level.SEVERE);
            return;
        }

        if (this.RWarning.isSelected()) {
            this.handlerListaLog.setLevel(Level.WARNING);
            return;
        }

        if (this.RSinLog.isSelected()) {
            this.handlerListaLog.setLevel(Level.OFF);
            return;
        }
    }//GEN-LAST:event_RButtonsActionPerformed

    private void jBAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAceptarActionPerformed
        if (fichero_bd_prop.exists() && fichero_prop_bluecove.exists() && fichero_html.exists()) {
            this.jDialogconfiguracion.setVisible(false);

            //Iniciamos la hebra con los ficheros de configuracion
            this.Iniciar();
        } else {
            if (!fichero_bd_prop.exists()) {
                this.jTBD.setForeground(Color.red);
            } else {
                this.jTBD.setForeground(Color.black);
            }
            if (!fichero_prop_bluecove.exists()) {
                this.jTBT.setForeground(Color.red);
            } else {
                this.jTBT.setForeground(Color.black);
            }
            if (!fichero_html.exists()) {
                this.jTHTML.setForeground(Color.red);
            } else {
                this.jTHTML.setForeground(Color.black);
            }
        }
    }//GEN-LAST:event_jBAceptarActionPerformed

    private void jDialogconfiguracionWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogconfiguracionWindowClosed
        System.exit(0);
    }//GEN-LAST:event_jDialogconfiguracionWindowClosed

    private void jBExaminarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExaminarBDActionPerformed
        int resp = this.jFileChooser1.showOpenDialog(this.jDialogconfiguracion);

        if (resp == JFileChooser.APPROVE_OPTION) {
            fichero_bd_prop = this.jFileChooser1.getSelectedFile();
            jTBD.setText(fichero_bd_prop.getAbsolutePath());
            jTBD.setForeground(Color.black);
        }
    }//GEN-LAST:event_jBExaminarBDActionPerformed

    private void jBExaminarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExaminarBTActionPerformed
        int resp = this.jFileChooser1.showOpenDialog(this.jDialogconfiguracion);

        if (resp == JFileChooser.APPROVE_OPTION) {
            fichero_prop_bluecove = this.jFileChooser1.getSelectedFile();
            jTBT.setText(fichero_prop_bluecove.getAbsolutePath());
            jTBT.setForeground(Color.black);
        }
    }//GEN-LAST:event_jBExaminarBTActionPerformed

    private void jBExaminarHTMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExaminarHTMLActionPerformed
        int resp = this.jFileChooser1.showOpenDialog(this.jDialogconfiguracion);

        if (resp == JFileChooser.APPROVE_OPTION) {
            fichero_html = this.jFileChooser1.getSelectedFile();
            jTHTML.setText(fichero_html.getAbsolutePath());
            jTHTML.setForeground(Color.black);
        }
    }//GEN-LAST:event_jBExaminarHTMLActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ListaCategorias;
    private javax.swing.JList ListaDispositivos;
    private javax.swing.JList ListaLog;
    private javax.swing.JList ListaProxNoticias;
    private javax.swing.JTextField NombreDispositivo;
    private javax.swing.JPanel PanelInfoDispositivo;
    private javax.swing.JTextField PinPairing;
    private javax.swing.JRadioButton RInfo;
    private javax.swing.JRadioButton RSevere;
    private javax.swing.JRadioButton RSinLog;
    private javax.swing.JRadioButton RWarning;
    private javax.swing.JTextField URLServicio;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBAceptar;
    private javax.swing.JButton jBExaminarBD;
    private javax.swing.JButton jBExaminarBT;
    private javax.swing.JButton jBExaminarHTML;
    private javax.swing.JDialog jDialogconfiguracion;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLBD;
    private javax.swing.JLabel jLBT;
    private javax.swing.JLabel jLHTML;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField jTBD;
    private javax.swing.JTextField jTBT;
    private javax.swing.JTextField jTHTML;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JSlider nMaxLineasLog;
    // End of variables declaration//GEN-END:variables
    private JDialog aboutBox;

    public BlufeedmeBTView(SingleFrameApplication app) {
        super(app);

        initComponents();
        this.nMaxLineasLog.setLabelTable(this.nMaxLineasLog.createStandardLabels(50));

        //Añadimos el handler para que escriba en el textarea todo lo que recoja el log
        handlerListaLog = new ListStreamHandler(this.ListaLog, this.nMaxLineasLog.getValue());
        handlerListaLog.setFormatter(new MiFormatter());
        handlerListaLog.setLevel(Level.ALL);
        LOGGER.setLevel(Level.ALL);
        LOGGER.addHandler(handlerListaLog);

        //Inicializamos por defecto los ficheros
        fichero_bd_prop = new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "BDMySQL.prop");
        fichero_prop_bluecove = new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "bluecove.prop");
        fichero_html = new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "noticias.html");

        this.jDialogconfiguracion.setLocationRelativeTo(this.getFrame());
        this.jDialogconfiguracion.setVisible(true);
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = BlufeedmeBT.getApplication().getMainFrame();
            aboutBox = new BlufeedmeBTAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        BlufeedmeBT.getApplication().show(aboutBox);
    }

    private void dispositivoEncontradoPerformed(EventoDispositivo evento) {
        //Limpiamos las listas unicamente cuando se encuentre el primer dispositivo de la nueva busqueda
        if (this.limpiarTodo) {
            this.modeloListaDispositivos.clear();
            this.modeloListaCategorias.clear();
            this.modeloListaProxNoticias.clear();
            this.URLServicio.setText(null);
            this.PinPairing.setText(null);
            this.NombreDispositivo.setText(null);

            //Deseleccionamos el elemento
            this.ListaDispositivos.clearSelection();
            this.limpiarTodo = false;
        }

        Dispositivo d = evento.getDispositivo();

        DispositivoVista dispositivo = new DispositivoVista(d.getMac(), evento.getNombreDispositivo(), false, d.getPin(), d.getURL_servicio(), d.getCategorias(), evento.getNoticias());

        if (evento.getTipoEvento() == evento.DISPOSITIVO_REGISTRADO_ENCONTRADO) {
            dispositivo.setRegistrado(true);
        }

        if (!this.modeloListaDispositivos.contains(d)) {
            this.modeloListaDispositivos.addElement(dispositivo);
        }
    }

    private void nuevaBusquedaPerformed() {
        this.limpiarTodo = true;
    }

    private void servicioEncontradoPerformed(EventoDispositivo evento) {
        //Actualizamos el valor de la url del dispositivoVista que hay ya añadido previamente a la lista
        int pos = this.modeloListaDispositivos.indexOf(new DispositivoVista(evento.getDispositivo().getMac(), null, false, null, null, null, null));

        if (pos != -1) {
            ((DispositivoVista) this.modeloListaDispositivos.get(pos)).setURL_servicio(evento.getDispositivo().getURL_servicio());
            //Si se esta mostrando dicho elemento actualizamos los datos en pantalla
            if (this.ListaDispositivos.getSelectedIndex() == pos) {
                MuestraInfoDispositivo(pos);
            }
        }
    }

    private void noticiasAenviarPerformed(EventoDispositivo evento) {
        //Actualizamos la lista de noticias a enviar del elemento
        int pos = this.modeloListaDispositivos.indexOf(new DispositivoVista(evento.getDispositivo().getMac(), null, false, null, null, null, null));

        if (pos != -1) {
            ((DispositivoVista) this.modeloListaDispositivos.get(pos)).setNoticias(evento.getNoticias());

            //Actualizamos la vista del elemento en pantalla si esta seleccionado
            if (this.ListaDispositivos.getSelectedIndex() == pos) {
                this.MuestraInfoDispositivo(pos);
            }
        }
    }

    private void noticiasEnviadasPerformed(EventoDispositivo evento) {
        //Actualizamos la lista de noticias a enviar del elemento
        int pos = this.modeloListaDispositivos.indexOf(new DispositivoVista(evento.getDispositivo().getMac(), null, false, null, null, null, null));

        if (pos != -1) {
            //Borramos la porcion de noticias a enviar correspondiente (dependiendo del numero de noticias que se hayan enviado ya)
            ((DispositivoVista) this.modeloListaDispositivos.get(pos)).getNoticias().subList(0, evento.getNoticias_enviadas()).clear();

            //Actualizamos la vista del elemento en pantalla si esta seleccionado
            if (this.ListaDispositivos.getSelectedIndex() == pos) {
                this.MuestraInfoDispositivo(pos);
            }
        }
    }

    private void MuestraInfoDispositivo(int indice) {
        //Mostramos todos los datos del elemento seleccionado
        if (indice < this.modeloListaDispositivos.getSize() && indice >= 0) {
            DispositivoVista d = (DispositivoVista) this.modeloListaDispositivos.get(indice);

            this.modeloListaCategorias.clear();
            if (d.getCategorias() != null) {
                for (ListIterator<Categoria> it = d.getCategorias().listIterator(); it.hasNext();) {
                    Categoria c = it.next();
                    this.modeloListaCategorias.addElement(c.getNombre());
                }
            }

            this.modeloListaProxNoticias.clear();
            if (d.getNoticias() != null) {
                for (ListIterator<Noticia> it = d.getNoticias().listIterator(); it.hasNext();) {
                    Noticia n = it.next();
                    this.modeloListaProxNoticias.addElement(n.getId() + ":" + n.getTitulo());
                }
            }

            this.URLServicio.setText(d.getURL_servicio());
            this.PinPairing.setText(d.getPin().toString());
            this.NombreDispositivo.setText(d.getNombre());
        }
    }

    private void Iniciar() {
        //Establecemos el filehandler para escribir el log en ficheros
        //Fichero con nombres Blufeedme_0.log etc, con tamaÃ±o maximo de 5 MB y con un máximo de 200 ficheros.
        FileHandler filehandler = null;

        try {
            filehandler = new FileHandler("%h/Blufeedme_%g.log", 5120, 200, false);
        } catch (IOException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
            System.exit(-1);
        } catch (SecurityException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
            System.exit(-1);
        }

        //Establecemos que recoja toda la informacion
        filehandler.setLevel(Level.ALL);
        Logger.getLogger("blufeedmebt").addHandler(filehandler);

        Vector<String> dispositivos = null;
        try {
            dispositivos = BlueCoveImpl.getLocalDevicesID();
        } catch (BluetoothStateException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
            System.exit(-1);
        }

        //Para el uso de varios dispositivos en la misma maquina virtual
        //BlueCoveImpl.useThreadLocalBluetoothStack();

        //Funciona sobre windows y no obtiene la lista de dispositivos
        if (dispositivos.isEmpty()) {
            dispositivoBT = new DispositivoBT("Bluetooth (Windows)", new UUID[]{DispositivoBT.OBEX_PUSH}, fichero_bd_prop, fichero_html);
        } else {
            System.out.println("En esta maquina hay instalado/s " + dispositivos.size() + " dispositivo/s Bluetooth");
            dispositivoBT = new DispositivoBT(dispositivos.get(0), new UUID[]{DispositivoBT.OBEX_PUSH}, fichero_bd_prop, fichero_html);
        }

        //Establecemos las propiedades de la libreria bluecove
        try {
            dispositivoBT.setPropiedadesBluecove(fichero_prop_bluecove);
        } catch (IOException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
            System.exit(-1);
        }

        //Iniciamos la hebra del dispositivo
        dispositivoBT.start();

        //Registramos los listener de los eventos
        dispositivoBT.addListenerDispositivos(new ListenerDispositivo() {
            @Override
            public void dispositivoEncontrado(EventoDispositivo evento) {
                dispositivoEncontradoPerformed(evento);
            }

            @Override
            public void nuevaBusqueda(EventoDispositivo evento) {
                nuevaBusquedaPerformed();
            }

            @Override
            public void servicioEncontrado(EventoDispositivo evento) {
                servicioEncontradoPerformed(evento);
            }

            @Override
            public void noticiasAenviar(EventoDispositivo evento) {
                noticiasAenviarPerformed(evento);
            }

            @Override
            public void noticiasEnviadas(EventoDispositivo evento) {
                noticiasEnviadasPerformed(evento);
            }
        });
    }
}
